on: [push, pull_request]

name: Test

jobs:
  clippy:
    name: clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install components
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          components: clippy, rustfmt
      - name: Check formatting
        run: cargo +nightly fmt --all -- --check
      - name: Install linter
        run: cargo install cargo-lints
      - name: Run linter
        run: cargo +stable lints clippy --all-targets --all-features
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install components
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - name: Install components (metal)
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          targets: thumbv8m.main-none-eabi
      - name: Build (release, all features)
        run: cargo +stable build --release --all-features
      - name: Build (release, std)
        run: cargo +stable build --release --no-default-features --features "std"
      - name: Build (release, serialize)
        run: cargo +stable build --release --no-default-features --features "serialize"
      - name: Build (release, borsh)
        run: cargo +stable build --release --no-default-features --features "borsh"
      - name: Build (release, no features)
        run: cargo +stable build --release --no-default-features
      - name: Build (release, no features, metal)
        run: cargo +stable build --release --no-default-features --target=thumbv8m.main-none-eabi
  test:
    name: cargo test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install components
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - name: Test (debug, all features)
        run: cargo +stable test --all-features
      - name: Test (release, all features)
        run: cargo +stable test --release --all-features
